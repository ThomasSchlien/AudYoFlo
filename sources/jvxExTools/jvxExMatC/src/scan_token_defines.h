#ifndef __JVXEXMATC_DEFINES_H__
#define __JVXEXMATC_DEFINES_H__

#define MXARRAY_TOKEN "JVX_DATAFORMAT_MXARRAY"
#define INHERIT_TOKEN "JVX_DATAFORMAT_INHERIT"
#define DATA_TOKEN "JVX_DATAFORMAT_DATA"
#define SIZE_TOKEN "JVX_DATAFORMAT_SIZE"
#define INT64_TOKEN "JVX_DATAFORMAT_64BIT_LE"
#define INT32_TOKEN "JVX_DATAFORMAT_32BIT_LE"
#define INT16_TOKEN "JVX_DATAFORMAT_16BIT_LE"
#define INT8_TOKEN "JVX_DATAFORMAT_8BIT"

#define UINT64_TOKEN "JVX_DATAFORMAT_U64BIT_LE"
#define UINT32_TOKEN "JVX_DATAFORMAT_U32BIT_LE"
#define UINT16_TOKEN "JVX_DATAFORMAT_U16BIT_LE"
#define UINT8_TOKEN "JVX_DATAFORMAT_U8BIT"

#define DIM2_TOKEN "2D"
#define DIM1_TOKEN "1D"
#define DIM0_TOKEN "0D"
#define STRING_TOKEN "JVX_DATAFORMAT_STRING"
#define MAIN_SEC_TOKEN "MATLAB_EXPORTS"
#define REF_CLASS_TOKEN "REFERENCE_CLASS"
#define REF_CLASS_TOKEN_FRIENDLY "REFERENCE_CLASS_FRIENDLY_NAME"
#define OUTPUTFILE_NAME "OUTPUTFILE_NAME"

#define	NAME "NAME"
#define	DESCRIPTION "DESCRIPTION"
#define	REFERENCE_FUNCTION_CLASS "REFERENCE_FUNCTION_CLASS"
#define	BACKWARDLINK "BACKWARDLINK"
#define	ACCEPT_INPUT_TYPES "ACCEPT_INPUT_TYPES"
#define	ACCEPT_INPUT_DIM_X "ACCEPT_INPUT_DIM_X"
#define	ACCEPT_INPUT_DIM_Y "ACCEPT_INPUT_DIM_Y"
#define	ACCEPT_INPUT_NUMBER_MIN "ACCEPT_INPUT_NUMBER_MIN"
#define	ACCEPT_INPUT_NUMBER_MAX "ACCEPT_INPUT_NUMBER_MAX"
#define	PRODUCE_OUTPUT_TYPES "PRODUCE_OUTPUT_TYPES"
#define	ACCEPT_OUTPUT_NUMBER_MIN "ACCEPT_OUTPUT_NUMBER_MIN"
#define	ACCEPT_OUTPUT_NUMBER_MAX "ACCEPT_OUTPUT_NUMBER_MAX"
#define	ACCEPT_OUTPUT_DIM_X "ACCEPT_OUTPUT_DIM_X"
#define	ACCEPT_OUTPUT_DIM_Y "ACCEPT_OUTPUT_DIM_Y"
#define DIMENSION_INPUT_FIELD "DIMENSION_INPUT_FIELD"
#define DIMENSION_OUTPUT_FIELD "DIMENSION_OUTPUT_FIELD"
#define DESCRIPTION_INPUT_PARAMS "DESCRIPTION_INPUT_PARAMETERS"
#define DESCRIPTION_OUTPUT_PARAMS "DESCRIPTION_OUTPUT_PARAMETERS"
#define USE_MATLAB_CALL_AS_LIBRARY "USE_MATLAB_CALL_AS_LIBRARY"

#define DEFAULT_NAME_REF_CLASS "classJvx"
#define DEFAULT_PREFIX_FUNCTION "jvxFunctionMatlabCall"
#define INPUT_OUTPUT_CROSS_REFERENCE_X "INPUT_OUTPUT_CROSS_REFERENCE_X"
#define INPUT_OUTPUT_CROSS_REFERENCE_Y "INPUT_OUTPUT_CROSS_REFERENCE_Y"
#define INPUT_OUTPUT_CROSS_REFERENCE_X2X "INPUT_OUTPUT_CROSS_REFERENCE_X2X"
#define INPUT_OUTPUT_CROSS_REFERENCE_Y2Y "INPUT_OUTPUT_CROSS_REFERENCE_Y2Y"
#define INPUT_OUTPUT_CROSS_REFERENCE_X2Y "INPUT_OUTPUT_CROSS_REFERENCE_X2Y"
#define INPUT_OUTPUT_CROSS_REFERENCE_Y2X "INPUT_OUTPUT_CROSS_REFERENCE_Y2X"
#define INPUT_OUTPUT_CROSS_REFERENCE_V2Y "INPUT_OUTPUT_CROSS_REFERENCE_V2Y"
#define INPUT_OUTPUT_CROSS_REFERENCE_V2X "INPUT_OUTPUT_CROSS_REFERENCE_V2X"
#define INPUT_OUTPUT_CROSS_REFERENCE_TYPE "INPUT_OUTPUT_CROSS_REFERENCE_TYPE"

#define CLASSNAME "CLASSNAME"
#define COMMENT "COMMENT"
#define POSTFIXALLOCATE "POSTFIXALLOCATE"
#define POSTFIXDEALLOCATE "POSTFIXDEALLOCATE"
#define OUTPUTFILE "OUTPUTFILE"
#define FUNCTIONNAME "FUNCTIONNAME"
#define TYPE "TYPE"
#define ID "ID"
#define NAME "NAME"
#define DESCRIPTION "DESCRIPTION"
#define LENGTH "LENGTH"
#define VALUE "VALUE"
#define INCLUDE_VALUE "INCLUDE_VALUE"
#define STR_TYPE "STR_TYPE"
#define STR_OVERALL_TYPE "STR_OVERALL_TYPE"
#define STR_DESCRIPTION "STR_DESCRIPTION"
#define STR_TEXT "STR_TEXT"
#define SEL_TEXT "SEL_TEXT"
#define SEL_DESCRIPTION "SEL_DESCRIPTION"
#define SEL_ISSELECTED "SEL_ISSELECTED"
#define SEL_ISEXCLUSIVE "SEL_ISEXCLUSIVE"
#define MIN_VALUE "MIN_VALUE"
#define MAX_VALUE "MAX_VALUE"
#define STEPS "STEPS"
#define CAN_SET "CAN_SET"
#define CAN_GET "CAN_GET"
#define NAME_PTRTEMP "ptrTemp"
#define NAME_VARTEMP "varTemp"
#define POSTFIX_CPP ".cpp"
#define POSTFIX_H ".h"
#define POSTFIX_ELEMENT "elm"
#define SUBFIELD "SUBFIELD"
#define NAME_PTR_RETURN "ptrReturn"
#define ID_PTR_RETURN "id"
#define BOOL_TERM_RETURN "terminateBool"
#define INDICATION_RESULT "resSuccess"
#define NUMBER_ELEMENTS "numElem"
#define GET_POINTER_PREFIX "getPointer"
#define SET_POINTER_PREFIX "setPointer"
#define POSTFIX_PROTOTYPES "prototypes"

// Code generation
#define EXTERNAL_CALL_HANDLE_TYPE "IjvxExternalCall"
#define INIT_EXTERNAL_CALL_HANDLE "initExternalCallhandler"
#define TERMINATE_EXTERNAL_CALL_HANDLE "terminateExternalCallhandler"
#define THE_EXTERNAL_CALL_HANDLER "theExtCallHandler"
#define MACRO_ENABLE_CODE_CALL "JVX_EXTERNAL_CALL_ENABLED"
#define MACRO_REQUEST_HANDLER "JVX_REQUEST_EXTERNAL_CALL_HANDLER"
#define MACRO_RETURN_HANDLER "JVX_RETURN_EXTERNAL_CALL_HANDLER"
#define MACRO_INIT_HANDLER "JVX_INIT_EXTERNAL_CALL_HANDLER"
#define MACRO_TERM_HANDLER "JVX_TERMINATE_EXTERNAL_CALL_HANDLER"
#define MACRO_COMMAND_REQUEST_HANDLER "objH->requestInterface((void**)&matH, JVX_INTERFACE_MATLAB_CALLHANDLER)"
#define MACRO_COMMAND_RETURN_HANDLER "objH->returnInterface(matH,JVX_INTERFACE_MATLAB_CALLHANDLER )"
#define MACRO_SYSTEM_INCLUDE_STATEMENT "#include \"jvx.h\""
#define MACRO_LIBRARY_INCLUDE_STATEMENT "#include \"interfaces/rtpLibraries/matlabCall_lib.h\""
#define MACRO_FUNCTION_RETURN_CALLCONVENTION "jvxErrorType JVX_CALLINGCONVENTION"
#define MACRO_LEAVE_NEG_NUMBER_INPUT_PARAMETERS "return(JVX_ERROR_INVALID_ARGUMENT)"
#define MACRO_LEAVE_NEG_NUMBER_OUTPUT_PARAMETERS "return(JVX_ERROR_INVALID_ARGUMENT)"
#define MACRO_LEAVE_NEG_TYPE_INPUT_PARAMETERS "return(JVX_ERROR_INVALID_ARGUMENT)" 
//JVX_API_RETURN_NEGATIVE(JVX_ERROR_EXTERNAL_CALL_TYPE_INPUT_VARIABLE)
#define MACRO_LEAVE_NEG_ZEROSIZE_INPUT_PARAMETERS "return(JVX_ERROR_INVALID_ARGUMENT)" 
//JVX_API_RETURN_NEGATIVE(JVX_ERROR_EXTERNAL_CALL_ZERO_SIZE_INPUT_VARIABLE)
#define MACRO_LEAVE_NEG_NUMCOLUMNS_INPUT_PARAMETERS "return(JVX_ERROR_INVALID_ARGUMENT)" 
//JVX_API_RETURN_NEGATIVE(JVX_ERROR_EXTERNAL_CALL_WRONG_NUMBER_COLUMNS)
#define MACRO_LEAVE_NEG_NUMROWS_INPUT_PARAMETERS "return(JVX_ERROR_INVALID_ARGUMENT)" 
//JVX_API_RETURN_NEGATIVE(JVX_ERROR_EXTERNAL_CALL_WRONG_NUMBER_ROWS)

#define MACRO_TYPE_EXTERNAL_DATA "jvxExternalDataType"
#define MACRO_TYPE_RETURN_SUCCESS "jvxErrorType"

#define MACRO_DATATYPE_NONE "JVX_DATAFORMAT_NONE"
#define MACRO_DATATYPE_DATA "JVX_DATAFORMAT_DATA"
#define MACRO_DATATYPE_SIZE "JVX_DATAFORMAT_SIZE"
#define MACRO_DATATYPE_32BIT_LE "JVX_DATAFORMAT_32BIT_LE"
#define MACRO_DATATYPE_64BIT_LE "JVX_DATAFORMAT_64BIT_LE"
#define MACRO_DATATYPE_16BIT_LE "JVX_DATAFORMAT_16BIT_LE"
#define MACRO_DATATYPE_8BIT "JVX_DATAFORMAT_8BIT"
#define MACRO_DATATYPE_U32BIT_LE "JVX_DATAFORMAT_U32BIT_LE"
#define MACRO_DATATYPE_U64BIT_LE "JVX_DATAFORMAT_U64BIT_LE"
#define MACRO_DATATYPE_U16BIT_LE "JVX_DATAFORMAT_U16BIT_LE"
#define MACRO_DATATYPE_U8BIT "JVX_DATAFORMAT_U8BIT"
#define MACRO_DATATYPE_STRING "JVX_DATAFORMAT_STRING"

#define MACRO_TYPE_HANDLE "jvxHandle"
#define MACRO_TYPE_DATA "jvxData"
#define MACRO_TYPE_SIZE "jvxSize"
#define MACRO_TYPE_INT64_LE "jvxInt64"
#define MACRO_TYPE_INT32_LE "jvxInt32"
#define MACRO_TYPE_INT16_LE "jvxInt16"
#define MACRO_TYPE_INT8 "jvxInt8"

#define MACRO_TYPE_UINT64_LE "jvxUInt64"
#define MACRO_TYPE_UINT32_LE "jvxUInt32"
#define MACRO_TYPE_UINT16_LE "jvxUInt16"
#define MACRO_TYPE_UINT8 "jvxUInt8"

#define MACRO_TYPE_STRING "jvxString"

#define MACRO_CALL_FUNCTION_RETURN_VAL "jvxErrorType res = "
#define MACRO_CALL_FUNCTION_CHECK_FALSE "res != JVX_NO_ERROR"
#define MACRO_ERROR_TEXT_LOOKUP "JVX_LOOKUP_ERROR_STRING(res)"
#define MACRO_DEFINE_ERROR "jvxApiError ptrErr"

#endif