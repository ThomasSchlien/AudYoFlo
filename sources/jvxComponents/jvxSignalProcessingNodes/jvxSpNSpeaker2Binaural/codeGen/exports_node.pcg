SECTION PROPERTIES
{	
	OUTPUTFILE_NAME = "genSpeaker2Binaural_node";	
	SECTION config
	{
		GENERATE_ENTRIES_CONFIG_FILE = "no";        // Defaults to "no" if not present
		GENERATE_ENTRIES_LINK_OBJECTS = "yes";       // Defaults to "no" if not present
		ALLOWED_STATE_MASK = {"JVX_STATE_ACTIVE", "JVX_STATE_PREPARED", "JVX_STATE_PROCESSING"};	
		CALLBACKS = {"set_bypass_mode", "select_bin_file_posthook", "set_speaker_posthook"};

		SECTION select_speaker
		{
			TYPE = "JVX_DATAFORMAT_SELECTION_LIST";	
			DESCRIPTION = "Select speaker channel";	  // Defaults to NAME if not present
			CONTENT_DECODER_TYPE = "JVX_PROPERTY_DECODER_SINGLE_SELECTION";
			ONLY_SELECTION_TO_CONFIG = "no";
			SELECTION_LIST_NAMES = {"REPLACEME"};
			SELECTION_LIST_SELECTED = {"yes"};
			SELECTION_LIST_EXCLUSIVE = {"yes"}; 	
			CALLBACK_SET_POSTHOOK = "set_speaker_posthook";
		};

		SECTION bypass
		{
			GENERATE_ENTRY_CONFIG_FILE = "yes";
			TYPE = "JVX_DATAFORMAT_BOOL";	
			INIT_SET = 1;
			CALLBACK_SET_POSTHOOK = "set_bypass_mode";
		};

		SECTION bin_definition_file
		{
			GENERATE_ENTRY_CONFIG_FILE = "yes";
			TYPE = "JVX_DATAFORMAT_STRING";	
			CONTENT_DECODER_TYPE = "JVX_PROPERTY_DECODER_FILENAME_OPEN";
			CALLBACK_SET_POSTHOOK = "select_bin_file_posthook";
		};
		SECTION clear_definition_file
		{
			GENERATE_ENTRY_CONFIG_FILE = "no";
			TYPE = "JVX_DATAFORMAT_BOOL";	
			INIT_SET = 0;
			CALLBACK_SET_POSTHOOK = "select_bin_file_posthook";
		};
	};

	SECTION mode
	{
		GENERATE_ENTRIES_CONFIG_FILE = "no";        // Defaults to "no" if not present
		GENERATE_ENTRIES_LINK_OBJECTS = "yes";       // Defaults to "no" if not present
		ALLOWED_STATE_MASK = {"JVX_STATE_SELECTED", "JVX_STATE_ACTIVE", "JVX_STATE_PREPARED", "JVX_STATE_PROCESSING"};	
		
		SECTION slave_mode
		{
			GENERATE_ENTRY_CONFIG_FILE = "yes";
			TYPE = "JVX_DATAFORMAT_BOOL";	
			INIT_SET = 0;
			// READ_WRITE_ACCESS = "JVX_PROPERTY_ACCESS_READ_ONLY"; <- this we set on activate to allow both modes controlled by mainCentral widget
		};

		SECTION involved
		{
			TYPE = "JVX_DATAFORMAT_BOOL";	
			INIT_SET = 1;
			READ_WRITE_ACCESS = "JVX_PROPERTY_ACCESS_READ_ONLY"; 
		};		

		SECTION function
		{
			TYPE = "JVX_DATAFORMAT_SELECTION_LIST";	
			CONTENT_DECODER_TYPE = "JVX_PROPERTY_DECODER_MULTI_SELECTION";
			SELECTION_LIST_NAMES = {"HRTF RENDERING"};
			SELECTION_LIST_SELECTED = {"yes"};
			SELECTION_LIST_EXCLUSIVE = {"no"}; 
			READ_WRITE_ACCESS ="JVX_PROPERTY_ACCESS_READ_ONLY"; 
		};
	};

	SECTION parameter
	{
		GENERATE_ENTRIES_CONFIG_FILE = "no";        // Defaults to "no" if not present
		GENERATE_ENTRIES_LINK_OBJECTS = "yes";       // Defaults to "no" if not present
		ALLOWED_STATE_MASK = {"JVX_STATE_ACTIVE", "JVX_STATE_PREPARED", "JVX_STATE_PROCESSING"};	
		
		// Callbacks applicable for all properties
		CALLBACKS = {"set_parameter_speaker_posthook", "get_parameter_speaker_prehook"};
		CALLBACK_SET_POSTHOOK = "set_parameter_speaker_posthook";
		CALLBACK_GET_PREHOOK = "get_parameter_speaker_prehook";		
		
		SECTION fir_hrtf_left
		{
			TYPE = "JVX_DATAFORMAT_STRING";	
			INIT_SET = "[]";
		};
		SECTION fir_hrtf_right
		{
			TYPE = "JVX_DATAFORMAT_STRING";	
			INIT_SET = "[]";
		};
	};
	SECTION monitor
	{
		GENERATE_ENTRIES_CONFIG_FILE = "no";        // Defaults to "no" if not present
		ALLOWED_STATE_MASK = {"JVX_STATE_ACTIVE", "JVX_STATE_PREPARED", "JVX_STATE_PROCESSING"};	

		SECTION last_error
		{
			TYPE = "JVX_DATAFORMAT_STRING";	
		};
	};
};
